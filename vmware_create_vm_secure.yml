- name: Create a VM from Scratch
  hosts: localhost
  gather_facts: no
  tasks:
  - name: Define Facts
    set_fact:
        vm_name: "test_vm_1001"
        vm_datastore: "SAN_RZ1"
        vm_group: "VM_RZ1"
        network_name: "VM Access"
  - name: Find VM
    vmware_guest_facts:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter_name }}"
      validate_certs: no
      name: "{{ vm_name }}"
    ignore_errors: True
    register: vm_find
    tags: test
  - name: "VM Object"
    debug: 
      msg: "{{ vm_find }}"
    tags: test
  - fail:
      msg: "The system already exists."
    when: vm_find is succeeded 
    tags: test
  - name: Create a VM
    vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        cluster: "{{ cluster_name }}"
        validate_certs: no
        folder: "{{ folder_root }}"
        name: "{{ vm_name }}" 
        state: poweredon
        guest_id: centos64Guest
        datastore: "{{ vm_datastore }}"
        disk:
          - size_gb: 10
        hardware:
            memory_mb: 512
            num_cpus: 1
            scsi: paravirtual
            boot_firmware: efi
        networks:
          - name: "{{ network_name }}"
            device_type: "vmxnet3"
        customvalues:
          - key: "isolation.tools.copy.disable"
            value: "True"
          - key: "isolation.tools.paste.disable"
            value: "True"
          - key: "isolation.tools.diskShrink.disable"
            value: "True"
          - key: "isolation.tools.diskWiper.disable"
            value: "True"
          - key: "mks.enable3d"
            value: "False"
          - key: "tools.setInfo.sizeLimit"
            value: "1048576"
          - key: "RemoteDisplay.vnc.enabled"
            value: "False"
          - key: "tools.guestlib.enableHostInfo"
            value: "False"
        wait_for_ip_address: no
    register: deploy_vm
  - name: Set VM CPU Reservation
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter_name }}"
      cluster: "{{ cluster_name }}"
      validate_certs: no
      folder: "{{ folder_root }}"
      uuid: '{{ deploy_vm.instance.hw_product_uuid }}'
      hardware:
        cpu_reservation: "{{ (deploy_vm.instance.hw_processor_count *  256)  | int }}"
      wait_for_ip_address: no
  - name: Set VM RAM Reservation
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter_name }}"
      cluster: "{{ cluster_name }}"
      validate_certs: no
      folder: "{{ folder_root }}"
      uuid: '{{ deploy_vm.instance.hw_product_uuid }}'
      hardware:
        memory_reservation: "{{ (deploy_vm.instance.hw_memtotal_mb / 2)  | int }}"
      wait_for_ip_address: no
  - name: Change virtual machine's boot order and related parameters
    vmware_guest_boot_manager:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      uuid: '{{ deploy_vm.instance.hw_product_uuid }}'
      secure_boot_enabled: True
    register: vm_boot_order
